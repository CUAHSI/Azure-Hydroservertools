<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework.Metadata</name>
    </assembly>
    <members>
        <member name="T:EntityFramework.Metadata.EfMap">
            <summary>
            
            </summary>
        </member>
        <member name="F:EntityFramework.Metadata.EfMap.Mappings">
            <summary>
            
            </summary>
        </member>
        <member name="M:EntityFramework.Metadata.EfMap.Get``1(System.Data.Entity.DbContext)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.EfMap.Get(System.Data.Entity.DbContext,System.Type)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.EfMap.Get(System.Data.Entity.DbContext,System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.EfMap.Get(System.Data.Entity.DbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.MappingApiExtensions.Db(System.Data.Entity.DbContext)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.MappingApiExtensions.Db``1(System.Data.Entity.DbContext)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ctx"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.MappingApiExtensions.Db``2(``0,System.Linq.Expressions.Expression{System.Func{``0,System.Data.Entity.DbSet{``1}}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="T1"></typeparam>
            <param name="ctx"></param>
            <param name="dbset"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.MappingApiExtensions.Db(System.Data.Entity.DbContext,System.Type)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.MappingApiExtensions.Db(System.Data.Entity.DbContext,System.String)">
            <summary>
            
            </summary>
            <param name="ctx"></param>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.GetPrivateFieldValue(System.Object,System.String)">
            <summary>
            Returns a private Property Value from a given Object. Uses Reflection.
            Throws a ArgumentOutOfRangeException if the Property is not found.
            </summary>
            <param name="obj">Object from where the Property Value is returned</param>
            <param name="propName">Propertyname as string.</param>
            <returns>PropertyValue</returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.GetPropertyValue(System.Object,System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="propertyName"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.GetProperty(System.Type,System.String,System.Char)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propertyName"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.IsNullable(System.Type,System.Type@)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="argumentType"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.GetDerivedTypes(System.Type,System.Reflection.Assembly)">
            <summary>
            Find all derived types from assembly.
            If assembly is not given, given type assembly is used.
            </summary>
            <param name="type"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Extensions.TypeExtensions.GetDerivedTypes(System.Type,System.Boolean,System.Reflection.Assembly)">
            <summary>
            Find all derived types from assembly.
            If assembly is not given, given type assembly is used.
            </summary>
            <param name="type"></param>
            <param name="includeItself"></param>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="T:EntityFramework.Metadata.IEntityMap`1">
            <summary>
            Generic entity map
            </summary>
            <typeparam name="T">Entity type</typeparam>
        </member>
        <member name="M:EntityFramework.Metadata.IEntityMap`1.Prop``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Get property mapping by predicate
            </summary>
            <typeparam name="T1"></typeparam>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Type">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.TableName">
            <summary>
            Table name in database
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Schema">
            <summary>
            Table schema
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.IsTph">
            <summary>
            Is table-per-hierarchy mapping
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.IsRoot">
            <summary>
            Is table-per-hierarchy base entity
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Properties">
            <summary>
            Mapped properties
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Fks">
            <summary>
            Foreign key properties
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Pks">
            <summary>
            Primary key properties
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Discriminators">
            <summary>
            Tph entity discriminators
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IEntityMap.Item(System.String)">
            <summary>
            Gets property map by property name
            </summary>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.IEntityMap.Prop(System.String)">
            <summary>
            Gets property map by property name
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.ColumnName">
            <summary>
            Table column name property is mapped to
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.PropertyName">
            <summary>
            Entity property name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsPk">
            <summary>
            Is column primary key
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsRequired">
            <summary>
            Is column nullable
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.DefaultValue">
            <summary>
            Column default value
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Computed">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.MaxLength">
            <summary>
            Column max length
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Type">
            <summary>
            Data type stored in the column
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsDiscriminator">
            <summary>
            Is table-per-hierarchy discriminator
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Precision">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Unicode">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.FixedLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.EntityMap">
            <summary>
            Paren entity mapping
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsNavigationProperty">
            <summary>
            Is navigation property
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.ForeignKeyPropertyName">
            <summary>
            Foreign key property name which is used for navigation property.
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.ForeignKey">
            <summary>
            Foreign key property.
            Available only for navigation properties.
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsFk">
            <summary>
            Is foreign key
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.NavigationPropertyName">
            <summary>
            Foreign keys navigation propery name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.FkTargetColumn">
            <summary>
            Foreign key target column
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.NavigationProperty">
            <summary>
            Foreign key navigation property
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.SRID">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.IPropertyMap.IsStrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappers.MapperBase.EntityContainer">
            <summary>
            
            </summary>
        </member>
        <member name="F:EntityFramework.Metadata.Mappers.MapperBase.MetadataWorkspace">
            <summary>
            The magic box
            </summary>
        </member>
        <member name="F:EntityFramework.Metadata.Mappers.MapperBase._entityMaps">
            <summary>
            Table mappings dictionary where key is entity type full name.
            </summary>
        </member>
        <member name="F:EntityFramework.Metadata.Mappers.MapperBase._pks">
            <summary>
            Primary keys of tables.
            Key is table name (in db).
            Values is array of entity property names that are primary keys
            </summary>
        </member>
        <member name="F:EntityFramework.Metadata.Mappers.MapperBase._fks">
            <summary>
            Foreign keys map
            Key is fk ref
            Value is pk ref
            </summary>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.GetTypeMappingsEf6">
            <summary>
            Type name and Edm.EntityType map for EF6+
            Key is type full name (Also OSpace item fullname and OCSpace identity)
            Value is EntityType from CSpace
            </summary>
            <returns></returns>
        </member>
        <member name="P:EntityFramework.Metadata.Mappers.MapperBase.TypeMappings">
            <summary>
            Type name and Edm.EntityType map.
            Key is type full name (Also OSpace item fullname).
            Value is EntityType from CSpace.
            </summary>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.#ctor(System.Data.Entity.Core.Metadata.Edm.MetadataWorkspace,System.Data.Entity.Core.Metadata.Edm.EntityContainer)">
            <summary>
            
            </summary>
            <param name="metadataWorkspace"></param>
            <param name="entityContainer">Code first or DB first entityContainer</param>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.RegEntity(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="typeFullName"></param>
            <param name="tableName"></param>
            <param name="schema"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.TryGetRefObjectType(System.String)">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.MapEntity(System.String,System.Data.Entity.Core.Metadata.Edm.EdmType)">
            <summary>
            
            </summary>
            <param name="typeFullName"></param>
            <param name="edmItem"></param>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.GetPropertiesToMap(EntityFramework.Metadata.Mappings.EntityMap,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Metadata.Edm.EdmProperty})">
            <summary>
            Gets properties that are ment for given type.
            TPH columns are ordered by hierarchy and type name. 
            First columns are from base class. Derived types, which name starts with 'A', columns are before type, which name starts with 'B' etc.
            So the logic is to include all properties inherited from base types and exclude all already bound properties from siblings.
            </summary>
            <param name="entityMap"></param>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Mappers.MapperBase.BindForeignKeys">
            <summary>
            
            </summary>
        </member>
        <member name="T:EntityFramework.Metadata.Mappings.DbMapping">
            <summary>
            
            </summary>
        </member>
        <member name="M:EntityFramework.Metadata.Mappings.DbMapping.#ctor(System.Data.Entity.DbContext)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.DbMapping.Tables">
            <summary>
            Tables in database
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.DbMapping.Item(System.Type)">
            <summary>
            Get table mapping by entity type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.DbMapping.Item(System.String)">
            <summary>
            Get table mapping by entity type full name
            </summary>
            <param name="typeFullName"></param>
            <returns></returns>
        </member>
        <member name="T:EntityFramework.Metadata.Mappings.EntityMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.TypeFullName">
            <summary>
            Entity type full name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Type">
            <summary>
            Entity type
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.TableName">
            <summary>
            Table name in database
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Schema">
            <summary>
            Database schema
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.IsTph">
            <summary>
            Is table-per-hierarchy mapping
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.IsRoot">
            <summary>
            Is table-per-hierarchy base entity
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Properties">
            <summary>
            Column mappings for table
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Fks">
            <summary>
            Foreign key properties
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Pks">
            <summary>
            Primary key properties
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Discriminators">
            <summary>
            Tph entity discriminators
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.Item(System.String)">
            <summary>
            Gets property map by property name
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:EntityFramework.Metadata.Mappings.EntityMap.Prop(System.String)">
            <summary>
            Gets property map by property name
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.ParentEdmType">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.EntityMap.EdmType">
            <summary>
            
            </summary>
        </member>
        <member name="M:EntityFramework.Metadata.Mappings.EntityMap.MapProperty(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <param name="columnName"></param>
            <returns></returns>
        </member>
        <member name="T:EntityFramework.Metadata.Mappings.PropertyMap">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.ColumnName">
            <summary>
            Table column name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.PropertyName">
            <summary>
            Entity property name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsPk">
            <summary>
            Is column primary key
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsRequired">
            <summary>
            Is column nullable
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.DefaultValue">
            <summary>
            Column default value
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsIdentity">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Computed">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.MaxLength">
            <summary>
            Column max length
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Type">
            <summary>
            Data type stored in the column
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsDiscriminator">
            <summary>
            Is table-per-hierarchy discriminator
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.EntityMap">
            <summary>
            Paren table mapping
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsNavigationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsFk">
            <summary>
            Is foreign key
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.NavigationPropertyName">
            <summary>
            Foreign keys navigation propery name
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.ForeignKeyPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.ForeignKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.FkTargetColumn">
            <summary>
            Foreign key target column
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.NavigationProperty">
            <summary>
            Foreign key navigation property
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Unicode">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.FixedLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Precision">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Scale">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.SRID">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.IsStrict">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.Selector">
            <summary>
            
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.EdmProperty">
            <summary>
            Edm property from storage entity set (SSpace).
            This propery is needed to know which properties are already mapped to TPH entity.
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.EdmMember">
            <summary>
            Edm member from CSpace.
            Stored for linking foreign keys.
            </summary>
        </member>
        <member name="P:EntityFramework.Metadata.Mappings.PropertyMap.FkTargetEdmMember">
            <summary>
            Edm member from CSpace.
            Stored for linking foreign keys.
            </summary>
        </member>
        <member name="M:EntityFramework.Metadata.Mappings.PropertyMap.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="property"></param>
            <param name="columnName"></param>
        </member>
    </members>
</doc>
