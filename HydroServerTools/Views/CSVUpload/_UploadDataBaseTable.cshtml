@*<table cellpadding="2" cellspacing="0" border="1" class="display" style="width:100%">
        <thead>
            <tr>
                @{var props =   Model[0].GetType().GetProperties();
                    foreach (var prop in props)
                    {
                    <th>@prop.Name</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @if (Model != null)
            {
                foreach (var item in Model)
                {
                     <tr>
                        @{var itemProps = item.GetType().GetProperties();
                            foreach (var itemProp in itemProps)
                            {
                                <th>@itemProp.GetValue(item, null) </th>
                            }
                        }
                    </tr>
                }
            }
        </tbody>
    </table>*@

<div>
    <table id="@ViewData["index"]" class="display">
        <thead>
            <tr>
                <th>&nbsp;</th>
                @{var props = Model.GetType().GetProperties();
                foreach (var prop in props)
                {
                    if (!Attribute.IsDefined(prop, typeof(System.ComponentModel.DataAnnotations.DisplayAttribute)))
                    {
                        <th>@prop.Name</th>}

                }
                }
            </tr>
        </thead>
        <tbody></tbody>
    </table>
    <br />
    <br />
</div>

<div class="panel panel-default">
    <div class="panel-body">

        @if ((ViewData["index"].ToString() == "0"))
        {
            <button type="button" id="0commit" class="btn btn-success active hide">
                <i class="glyphicon glyphicon-save"></i>
                Commit Changes
            </button>
    @*<button type="button" id="0cancel" class="btn btn-warning alert-message hide">
        <i class="glyphicon glyphicon-remove"></i>
        Cancel
    </button>*@
        }
        @if (ViewData["index"].ToString() == "2")
        {
            <button type="button" id="2commit" class="btn btn-success active hide">
                <i class="glyphicon glyphicon-save"></i>
                Commit Changes
            </button>
    
        }
       
        <button type="button" id="cancel" class="btn btn-warning active cancel">
                <i class="glyphicon glyphicon-remove"></i>
                Cancel
        </button>
      


            <span>
                 @Html.ActionLink("Download as CSV", "Download", "Export", new { identifier = @ViewData["index"], viewName = @ViewData["viewName"] }, new { @class = "btn btn-info active pull-right", target = "_blank" })
            </span>
        <br />
        <br />
        <div class="well">
            <h5>Click "Update Timeseries metadata" after data is saved to the database.
This is required to register the new data values with the existing timeseries or create new timeseries.
Failing to do this will result in the new data not being discoverable.
Since this can take a long period of time depending on the amount of data in the database
it is recommended to be the last step of uploading multiple sheets of data.  </h5>
            @Html.ActionLink("Update Timeseries metadata", "RecreateSeriescatalog", "Home", null, new { @class = "btn btn-info active" })
           </div>
            @* <span class="glyphicon glyphicon-download"></span>@Html.ActionLink("Download as CSV", "Download", "Export", new { identifier = @ViewData["index"], viewName = @ViewData["viewName"] }, new { target = "_blank" })*@
        </div>
    </div>
